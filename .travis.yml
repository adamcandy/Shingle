
matrix:
  include:
  # macOS 10.13 High Sierra pip base packages build and test abcd
  - env:
      - NAME=macOs-HighSierra-Pip
    os: osx
    language: generic
    before_install:
      - brew update
      # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
      - brew install openssl readline
      # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
      # I didn't do this above because it works and I'm lazy.
      - brew outdated pyenv || brew upgrade pyenv
      # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
      # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
      - brew install pyenv-virtualenv
      - pyenv install 2.7.15
      # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
      # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
      # modify the Bash environment. ??? So, I hand-set the variables instead.
      - export PYENV_VERSION=2.7.15
      - export PATH="/Users/travis/.pyenv/shims:${PATH}"
      - pyenv virtualenv venv
      #- source venv/bin/activate
      # A manual check that the correct version of Python is running.
      - python --version
    install:
      - python -m pip install -U pip
      - pip install numpy==1.13.3
      - pip install matplotlib pyproj shapely Pillow pytest requests
      - pip install Pydap==3.2.1
      - rm -f '/usr/local/include/c++'
      - brew install gmsh
      - brew link --overwrite gcc
      - brew install netcdf
      - pip install ScientificPython
    before_script:
      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
    script:
      - pip freeze | grep Pydap
      - pip freeze | grep numpy
      - make
      - make unittest
      # Pre-download, to best work with Travis timeout
      - curl http://store.pangaea.de/Publications/TimmermannR_et_al_2010/RTopo105b_50S.nc -o test/Amundsen_Sea/data/RTopo.nc
      - make test

#  # Ubuntu Trusty 14.04 Docker container build and test
#  - env:
#      - NAME=trusty-docker
#    services:
#      - docker
#    dist: trusty
#    language: cpp
#    install:
#      - docker build -t shingle .
#    script:
#      - docker run -a stdout -t shingle make unittest
#      - docker run -v $PWD:/run -w="/run" -a stdout -t shingle shingle -t
#
#  # Ubuntu Precise 12.04 Docker container build and test
#  - env:
#      - NAME=precise-docker
#    services:
#      - docker
#    dist: trusty
#    language: cpp
#    install:
#      - docker build -f Dockerfile_precise -t shingle .
#    script:
#      - docker run -a stdout -t shingle make unittest
#      - docker run -v $PWD:/run -w="/run" -a stdout -t shingle shingle -t
#
#  # Ubuntu Xenial 16.04 Docker container build and test
#  - env:
#      - NAME=xenial-docker
#    services:
#      - docker
#    dist: trusty
#    language: cpp
#    install:
#      - docker build -f Dockerfile_xenial -t shingle .
#    script:
#      - docker run -a stdout -t shingle make unittest
#      - docker run -v $PWD:/run -w="/run" -a stdout -t shingle shingle -t
#
#  # Ubuntu Trusty 14.04 Travis apt base packages build and test
#  - env:
#      - NAME=trusty-apt
#    dist: trusty
#    language: python
#    python: 2.7
#    sudo: required
#    compiler: gcc
#    addons:
#      apt:
#        packages:
#          # - git
#          # - gcc
#          # - g++
#          - build-essential
#          - python-setuptools
#          - python-dev
#          - python-pip
#          - python-scipy
#          - python-numpy
#          - python-netcdf
#          - python-scientific
#          - python-matplotlib 
#          - python-shapely
#          - python-pyproj
#          - python-pil
#          - gmsh
#          - python-pytest
#          - curl
#    virtualenv:
#      system_site_packages: true
#    install:
#      # Temporarily update all apt packages
#      - sudo apt-get update
#      - sudo apt-get install -y git gcc g++ build-essential python-setuptools python-dev python-pip python-scipy python-numpy python-netcdf python-scientific python-matplotlib python-shapely python-pyproj python-pil gmsh python-pytest
#      - pip install Pydap
#    before_script:
#      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
#      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
#      - export LD_LIBRARY_PATH="/usr/lib/python2.7/dist-packages/Scientific/:$LD_LIBRARY_PATH"
#      - export LIBRARY_PATH="/usr/lib/python2.7/dist-packages/Scientific/:$LIBRARY_PATH"
#      - export PYTHONPATH="/usr/lib/python2.7/dist-packages/Scientific/:$PYTHONPATH"
#    script:
#      - make
#      - make unittest
#      # Pre-download, to best work with Travis timeout
#      - curl http://store.pangaea.de/Publications/TimmermannR_et_al_2010/RTopo105b_50S.nc -o test/Amundsen_Sea/data/RTopo.nc
#      - make test
#
#  # Ubuntu Precise 12.04 Travis apt base packages build and test
#  - env:
#      - NAME=precise-apt
#    dist: precise
#    language: python
#    python: 2.7
#    sudo: required
#    compiler: gcc
#    addons:
#      apt:
#        packages:
#          # - git
#          # - gcc
#          # - g++
#          - build-essential
#          - python-setuptools
#          - python-dev
#          - python-pip
#          - python-scipy
#          - python-numpy
#          - python-scientific
#          - python-matplotlib 
#          - python-shapely
#          - python-pyproj
#          - python-imaging
#          - python-requests
#          - gmsh
#          - python-py
#          - curl
#    virtualenv:
#      system_site_packages: true
#    install:
#      # Temporarily update all apt packages
#      - sudo apt-get update
#      - sudo apt-get install -y git gcc g++ build-essential python-setuptools python-dev python-pip python-scipy python-numpy python-scientific python-matplotlib python-shapely python-pyproj python-imaging gmsh python-py
#      - pip install Pydap
#    before_script:
#      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
#      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
#    script:
#      - make
#      - make unittest
#      # Pre-download, to best work with Travis timeout
#      - curl http://store.pangaea.de/Publications/TimmermannR_et_al_2010/RTopo105b_50S.nc -o test/Amundsen_Sea/data/RTopo.nc
#      - make test
#
#  # Ubuntu Trusty 14.04 Travis pip base packages build and test
#  - env:
#      - NAME=trusty-pip
#    dist: trusty
#    language: python
#    python: 2.7
#    # Temporarily roll back to Precise
#    sudo: required
#    compiler: gcc
#    addons:
#      apt:
#        packages:
#          # Temporarily install apt Scientific
#          - python-netcdf
#          - python-scientific
#          - gmsh
#          - curl
#    virtualenv:
#      system_site_packages: true
#    install:
#      - pip install numpy matplotlib pyproj shapely Pillow pytest
#      - pip install Pydap==3.2.1
#      #- pip install ScientificPython
#    before_script:
#      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
#      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
#    script:
#      - pip freeze | grep Pydap
#      - pip freeze | grep numpy
#      - make
#      - make unittest
#      # Pre-download, to best work with Travis timeout
#      - curl http://store.pangaea.de/Publications/TimmermannR_et_al_2010/RTopo105b_50S.nc -o test/Amundsen_Sea/data/RTopo.nc
#      - travis_wait make test
#
#  # Ubuntu Precise 12.04 Travis pip base packages build and test
#  - env:
#      - NAME=precise-pip
#    dist: precise
#    language: python
#    python: 2.7
#    # Temporarily roll back to Precise
#    sudo: required
#    compiler: gcc
#    addons:
#      apt:
#        packages:
#          # Temporarily install apt Scientific
#          - python-scientific
#          - gmsh
#          - curl
#    virtualenv:
#      system_site_packages: true
#    install:
#      - pip install numpy matplotlib pyproj Pydap shapely Pillow pytest requests
#      #- pip install ScientificPython
#    before_script:
#      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
#      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
#    script:
#      - make
#      - make unittest
#      # Pre-download, to best work with Travis timeout
#      - curl http://store.pangaea.de/Publications/TimmermannR_et_al_2010/RTopo105b_50S.nc -o test/Amundsen_Sea/data/RTopo.nc
#      - make test




#  # macOS 10.13 High Sierra pip base packages build and test
#  - os: osx
#  - osx_image: xcode9.4
#  - env:
#      - NAME=highsierra-pip
#    dist: highsierra
#    language: python
#    python: 2.7
#    sudo: required
#    compiler: gcc
#    virtualenv:
#      system_site_packages: true
#    install:
#      - pip install numpy matplotlib pyproj Pydap shapely Pillow pytest
#      - brew install gmsh
#    before_script:
#      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
#      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
#    script:
#      - make
#      - make unittest
#      # Pre-download, to best work with Travis timeout
#      - curl http://store.pangaea.de/Publications/TimmermannR_et_al_2010/RTopo105b_50S.nc -o test/Amundsen_Sea/data/RTopo.nc
#      - make test



notifications:
  slack:
    secure: RRdmxLqjwm5LVcHmeoLs+WAB8FhYEMb+riZMvAoVxt4/7FuSIvyil/oeL8KI7P7g/EPnN8hQlf7duyGwAaih/gWKd47vDnmhir7VbO6fe3zBVvX9TVa/kuqejGSnJlOPw6dFDMLoCqnJ08dwUWzvvAmCHr7wod16PfI557pqvAE=

